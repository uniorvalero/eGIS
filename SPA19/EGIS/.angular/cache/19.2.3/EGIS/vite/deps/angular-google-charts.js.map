{
  "version": 3,
  "sources": ["../../../../../../node_modules/angular-google-charts/fesm2022/angular-google-charts.mjs"],
  "sourcesContent": ["import * as i1 from 'rxjs';\nimport { Subject, of, Observable, ReplaySubject, combineLatest, fromEvent } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, LOCALE_ID, Injectable, Inject, Component, ChangeDetectionStrategy, EventEmitter, Input, Output, HostBinding, ContentChildren, Optional, NgModule, makeEnvironmentProviders } from '@angular/core';\nimport { mergeMap, map, switchMap, debounceTime } from 'rxjs/operators';\n\n/// <reference path=\"./chart-editor.ts\" />\nconst _c0 = [\"*\"];\nconst _c1 = \"[_nghost-%COMP%]{width:-moz-fit-content;width:fit-content;display:block}\";\nclass ChartEditorRef {\n  constructor(editor) {\n    this.editor = editor;\n    this.doneSubject = new Subject();\n    this.addEventListeners();\n  }\n  /**\n   * Gets an observable that is notified when the dialog is saved.\n   * Emits either the result if the dialog was saved or `null` if editing was cancelled.\n   */\n  afterClosed() {\n    return this.doneSubject.asObservable();\n  }\n  /**\n   * Stops editing the chart and closes the dialog.\n   */\n  cancel() {\n    this.editor.closeDialog();\n  }\n  addEventListeners() {\n    google.visualization.events.addOneTimeListener(this.editor, 'ok', () => {\n      google.visualization.events.removeAllListeners(this.editor);\n      const updatedChartWrapper = this.editor.getChartWrapper();\n      this.doneSubject.next(updatedChartWrapper);\n      this.doneSubject.complete();\n    });\n    google.visualization.events.addOneTimeListener(this.editor, 'cancel', () => {\n      google.visualization.events.removeAllListeners(this.editor);\n      this.doneSubject.next(null);\n      this.doneSubject.complete();\n    });\n  }\n}\nvar ChartType;\n(function (ChartType) {\n  ChartType[\"AnnotationChart\"] = \"AnnotationChart\";\n  ChartType[\"AreaChart\"] = \"AreaChart\";\n  ChartType[\"Bar\"] = \"Bar\";\n  ChartType[\"BarChart\"] = \"BarChart\";\n  ChartType[\"BubbleChart\"] = \"BubbleChart\";\n  ChartType[\"Calendar\"] = \"Calendar\";\n  ChartType[\"CandlestickChart\"] = \"CandlestickChart\";\n  ChartType[\"ColumnChart\"] = \"ColumnChart\";\n  ChartType[\"ComboChart\"] = \"ComboChart\";\n  ChartType[\"PieChart\"] = \"PieChart\";\n  ChartType[\"Gantt\"] = \"Gantt\";\n  ChartType[\"Gauge\"] = \"Gauge\";\n  ChartType[\"GeoChart\"] = \"GeoChart\";\n  ChartType[\"Histogram\"] = \"Histogram\";\n  ChartType[\"Line\"] = \"Line\";\n  ChartType[\"LineChart\"] = \"LineChart\";\n  ChartType[\"Map\"] = \"Map\";\n  ChartType[\"OrgChart\"] = \"OrgChart\";\n  ChartType[\"Sankey\"] = \"Sankey\";\n  ChartType[\"Scatter\"] = \"Scatter\";\n  ChartType[\"ScatterChart\"] = \"ScatterChart\";\n  ChartType[\"SteppedAreaChart\"] = \"SteppedAreaChart\";\n  ChartType[\"Table\"] = \"Table\";\n  ChartType[\"Timeline\"] = \"Timeline\";\n  ChartType[\"TreeMap\"] = \"TreeMap\";\n  ChartType[\"WordTree\"] = \"WordTree\";\n})(ChartType || (ChartType = {}));\nconst ChartTypesToPackages = {\n  [ChartType.AnnotationChart]: 'annotationchart',\n  [ChartType.AreaChart]: 'corechart',\n  [ChartType.Bar]: 'bar',\n  [ChartType.BarChart]: 'corechart',\n  [ChartType.BubbleChart]: 'corechart',\n  [ChartType.Calendar]: 'calendar',\n  [ChartType.CandlestickChart]: 'corechart',\n  [ChartType.ColumnChart]: 'corechart',\n  [ChartType.ComboChart]: 'corechart',\n  [ChartType.PieChart]: 'corechart',\n  [ChartType.Gantt]: 'gantt',\n  [ChartType.Gauge]: 'gauge',\n  [ChartType.GeoChart]: 'geochart',\n  [ChartType.Histogram]: 'corechart',\n  [ChartType.Line]: 'line',\n  [ChartType.LineChart]: 'corechart',\n  [ChartType.Map]: 'map',\n  [ChartType.OrgChart]: 'orgchart',\n  [ChartType.Sankey]: 'sankey',\n  [ChartType.Scatter]: 'scatter',\n  [ChartType.ScatterChart]: 'corechart',\n  [ChartType.SteppedAreaChart]: 'corechart',\n  [ChartType.Table]: 'table',\n  [ChartType.Timeline]: 'timeline',\n  [ChartType.TreeMap]: 'treemap',\n  [ChartType.WordTree]: 'wordtree'\n};\nfunction getPackageForChart(type) {\n  return ChartTypesToPackages[type];\n}\nfunction getDefaultConfig() {\n  return {\n    version: 'current',\n    safeMode: false\n  };\n}\nconst GOOGLE_CHARTS_CONFIG = new InjectionToken('GOOGLE_CHARTS_CONFIG');\nconst GOOGLE_CHARTS_LAZY_CONFIG = new InjectionToken('GOOGLE_CHARTS_LAZY_CONFIG', {\n  providedIn: 'root',\n  factory: () => {\n    // Using options object instead of deprecated InjectFlags.Optional (Angular 20 compatibility)\n    const configFromModule = inject(GOOGLE_CHARTS_CONFIG, {\n      optional: true\n    });\n    return of({\n      ...getDefaultConfig(),\n      ...(configFromModule || {})\n    });\n  }\n});\nclass ScriptLoaderService {\n  constructor(zone, localeId, config$) {\n    this.zone = zone;\n    this.localeId = localeId;\n    this.config$ = config$;\n    this.scriptSource = 'https://www.gstatic.com/charts/loader.js';\n    this.scriptLoadSubject = new Subject();\n  }\n  /**\n   * Checks whether `google.charts` is available.\n   *\n   * If not, it can be loaded by calling `loadChartPackages`.\n   *\n   * @returns `true` if `google.charts` is available, `false` otherwise.\n   */\n  isGoogleChartsAvailable() {\n    if (typeof google === 'undefined' || typeof google.charts === 'undefined') {\n      return false;\n    }\n    return true;\n  }\n  /**\n   * Loads the Google Chart script and the provided chart packages.\n   * Can be called multiple times to load more packages.\n   *\n   * When called without any arguments, this will just load the default package\n   * containing the namespaces `google.charts` and `google.visualization` without any charts.\n   *\n   * @param packages The packages to load.\n   * @returns A stream emitting as soon as the chart packages are loaded.\n   */\n  loadChartPackages(...packages) {\n    return this.loadGoogleCharts().pipe(mergeMap(() => this.config$), map(config => {\n      return {\n        ...getDefaultConfig(),\n        ...(config || {})\n      };\n    }), switchMap(googleChartsConfig => {\n      return new Observable(observer => {\n        const config = {\n          packages,\n          language: this.localeId,\n          mapsApiKey: googleChartsConfig.mapsApiKey,\n          safeMode: googleChartsConfig.safeMode\n        };\n        google.charts.load(googleChartsConfig.version, config);\n        google.charts.setOnLoadCallback(() => {\n          this.zone.run(() => {\n            observer.next();\n            observer.complete();\n          });\n        });\n      });\n    }));\n  }\n  /**\n   * Loads the Google Charts script. After the script is loaded, `google.charts` is defined.\n   *\n   * @returns A stream emitting as soon as loading has completed.\n   * If the google charts script is already loaded, the stream emits immediately.\n   */\n  loadGoogleCharts() {\n    if (this.isGoogleChartsAvailable()) {\n      return of(undefined);\n    } else if (!this.isLoadingGoogleCharts()) {\n      const script = this.createGoogleChartsScript();\n      script.onload = () => {\n        this.zone.run(() => {\n          this.scriptLoadSubject.next();\n          this.scriptLoadSubject.complete();\n        });\n      };\n      script.onerror = () => {\n        this.zone.run(() => {\n          console.error('Failed to load the google charts script!');\n          this.scriptLoadSubject.error(new Error('Failed to load the google charts script!'));\n        });\n      };\n    }\n    return this.scriptLoadSubject.asObservable();\n  }\n  isLoadingGoogleCharts() {\n    return this.getGoogleChartsScript() != null;\n  }\n  getGoogleChartsScript() {\n    const pageScripts = Array.from(document.getElementsByTagName('script'));\n    return pageScripts.find(script => script.src === this.scriptSource);\n  }\n  createGoogleChartsScript() {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = this.scriptSource;\n    script.async = true;\n    document.getElementsByTagName('head')[0].appendChild(script);\n    return script;\n  }\n  static {\n    this.ɵfac = function ScriptLoaderService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ScriptLoaderService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(LOCALE_ID), i0.ɵɵinject(GOOGLE_CHARTS_LAZY_CONFIG));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ScriptLoaderService,\n      factory: ScriptLoaderService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScriptLoaderService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }, {\n      type: i1.Observable,\n      decorators: [{\n        type: Inject,\n        args: [GOOGLE_CHARTS_LAZY_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n\n/// <reference path=\"./chart-editor.ts\" />\n/// <reference path=\"./chart-editor.ts\" />\nclass ChartEditorComponent {\n  constructor(scriptLoaderService) {\n    this.scriptLoaderService = scriptLoaderService;\n    this.initializedSubject = new Subject();\n  }\n  /**\n   * Emits as soon as the chart editor is fully initialized.\n   */\n  get initialized$() {\n    return this.initializedSubject.asObservable();\n  }\n  ngOnInit() {\n    this.scriptLoaderService.loadChartPackages('charteditor').subscribe(() => {\n      this.editor = new google.visualization.ChartEditor();\n      this.initializedSubject.next(this.editor);\n      this.initializedSubject.complete();\n    });\n  }\n  editChart(component, options) {\n    if (!component.chartWrapper) {\n      throw new Error('Chart wrapper is `undefined`. Please wait for the `initialized$` observable before trying to edit a chart.');\n    }\n    if (!this.editor) {\n      throw new Error('Chart editor is `undefined`. Please wait for the `initialized$` observable before trying to edit a chart.');\n    }\n    const handle = new ChartEditorRef(this.editor);\n    this.editor.openDialog(component.chartWrapper, options || {});\n    handle.afterClosed().subscribe(result => {\n      if (result) {\n        component.chartWrapper = result;\n      }\n    });\n    return handle;\n  }\n  static {\n    this.ɵfac = function ChartEditorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChartEditorComponent)(i0.ɵɵdirectiveInject(ScriptLoaderService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChartEditorComponent,\n      selectors: [[\"chart-editor\"]],\n      hostAttrs: [1, \"chart-editor\"],\n      standalone: false,\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function ChartEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'chart-editor',\n      template: `<ng-content></ng-content>`,\n      host: {\n        class: 'chart-editor'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ScriptLoaderService\n    }];\n  }, null);\n})();\nclass DataTableService {\n  create(data, columns, formatters) {\n    if (data == null) {\n      return undefined;\n    }\n    let firstRowIsData = true;\n    if (columns != null) {\n      firstRowIsData = false;\n    }\n    const dataTable = google.visualization.arrayToDataTable(this.getDataAsTable(data, columns), firstRowIsData);\n    if (formatters) {\n      this.applyFormatters(dataTable, formatters);\n    }\n    return dataTable;\n  }\n  getDataAsTable(data, columns) {\n    if (columns) {\n      return [columns, ...data];\n    } else {\n      return data;\n    }\n  }\n  applyFormatters(dataTable, formatters) {\n    for (const val of formatters) {\n      val.formatter.format(dataTable, val.colIndex);\n    }\n  }\n  static {\n    this.ɵfac = function DataTableService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DataTableService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DataTableService,\n      factory: DataTableService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataTableService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generates a random ID which can be used to uniquely identify an element.\n */\nfunction generateRandomId() {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return '_' + Math.random().toString(36).substr(2, 9);\n}\nvar FilterType;\n(function (FilterType) {\n  FilterType[\"Category\"] = \"CategoryFilter\";\n  FilterType[\"ChartRange\"] = \"ChartRangeFilter\";\n  FilterType[\"DateRange\"] = \"DateRangeFilter\";\n  FilterType[\"NumberRange\"] = \"NumberRangeFilter\";\n  FilterType[\"String\"] = \"StringFilter\";\n})(FilterType || (FilterType = {}));\nclass ControlWrapperComponent {\n  constructor(loaderService) {\n    this.loaderService = loaderService;\n    /**\n     * Emits when an error occurs when attempting to render the control.\n     */\n    this.error = new EventEmitter();\n    /**\n     * The control is ready to accept user interaction and for external method calls.\n     *\n     * Alternatively, you can listen for a ready event on the dashboard holding the control\n     * and call control methods only after the event was fired.\n     */\n    this.ready = new EventEmitter();\n    /**\n     * Emits when the user interacts with the control, affecting its state.\n     * For example, a `stateChange` event will be emitted whenever you move the thumbs of a range slider control.\n     *\n     * To retrieve an updated control state after the event fired, call `ControlWrapper.getState()`.\n     */\n    this.stateChange = new EventEmitter();\n    /**\n     * A generated id assigned to this components DOM element.\n     */\n    this.id = generateRandomId();\n    this.wrapperReadySubject = new ReplaySubject(1);\n  }\n  /**\n   * Emits after the `ControlWrapper` was created.\n   */\n  get wrapperReady$() {\n    return this.wrapperReadySubject.asObservable();\n  }\n  get controlWrapper() {\n    if (!this._controlWrapper) {\n      throw new Error(`Cannot access the control wrapper before it being initialized.`);\n    }\n    return this._controlWrapper;\n  }\n  ngOnInit() {\n    this.loaderService.loadChartPackages('controls').subscribe(() => {\n      this.createControlWrapper();\n    });\n  }\n  ngOnChanges(changes) {\n    if (!this._controlWrapper) {\n      return;\n    }\n    if (changes.type) {\n      this._controlWrapper.setControlType(this.type);\n    }\n    if (changes.options) {\n      this._controlWrapper.setOptions(this.options || {});\n    }\n    if (changes.state) {\n      this._controlWrapper.setState(this.state || {});\n    }\n  }\n  createControlWrapper() {\n    this._controlWrapper = new google.visualization.ControlWrapper({\n      containerId: this.id,\n      controlType: this.type,\n      state: this.state,\n      options: this.options\n    });\n    this.addEventListeners();\n    this.wrapperReadySubject.next(this._controlWrapper);\n  }\n  addEventListeners() {\n    google.visualization.events.removeAllListeners(this._controlWrapper);\n    google.visualization.events.addListener(this._controlWrapper, 'ready', event => this.ready.emit(event));\n    google.visualization.events.addListener(this._controlWrapper, 'error', event => this.error.emit(event));\n    google.visualization.events.addListener(this._controlWrapper, 'statechange', event => this.stateChange.emit(event));\n  }\n  static {\n    this.ɵfac = function ControlWrapperComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ControlWrapperComponent)(i0.ɵɵdirectiveInject(ScriptLoaderService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ControlWrapperComponent,\n      selectors: [[\"control-wrapper\"]],\n      hostAttrs: [1, \"control-wrapper\"],\n      hostVars: 1,\n      hostBindings: function ControlWrapperComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        for: \"for\",\n        type: \"type\",\n        options: \"options\",\n        state: \"state\"\n      },\n      outputs: {\n        error: \"error\",\n        ready: \"ready\",\n        stateChange: \"stateChange\"\n      },\n      exportAs: [\"controlWrapper\"],\n      standalone: false,\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 0,\n      vars: 0,\n      template: function ControlWrapperComponent_Template(rf, ctx) {},\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ControlWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'control-wrapper',\n      template: '',\n      host: {\n        class: 'control-wrapper'\n      },\n      exportAs: 'controlWrapper',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ScriptLoaderService\n    }];\n  }, {\n    for: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    state: [{\n      type: Input\n    }],\n    error: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    stateChange: [{\n      type: Output\n    }],\n    id: [{\n      type: HostBinding,\n      args: ['id']\n    }]\n  });\n})();\nclass DashboardComponent {\n  constructor(element, loaderService, dataTableService) {\n    this.element = element;\n    this.loaderService = loaderService;\n    this.dataTableService = dataTableService;\n    /**\n     * The dashboard has completed drawing and is ready to accept changes.\n     *\n     * The ready event will also fire:\n     * - after the completion of a dashboard refresh triggered by a user or programmatic interaction with one of the controls,\n     * - after redrawing any chart on the dashboard.\n     */\n    this.ready = new EventEmitter();\n    /**\n     * Emits when an error occurs when attempting to render the dashboard.\n     * One or more of the controls and charts that are part of the dashboard may have failed rendering.\n     */\n    this.error = new EventEmitter();\n    this.initialized = false;\n  }\n  ngOnInit() {\n    this.loaderService.loadChartPackages('controls').subscribe(() => {\n      this.dataTable = this.dataTableService.create(this.data, this.columns, this.formatters);\n      this.createDashboard();\n      this.initialized = true;\n    });\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      return;\n    }\n    if (changes.data || changes.columns || changes.formatters) {\n      this.dataTable = this.dataTableService.create(this.data, this.columns, this.formatters);\n      this.dashboard.draw(this.dataTable);\n    }\n  }\n  createDashboard() {\n    // TODO: This should happen in the control wrapper\n    // However, I don't yet know how to do this because then `bind()` would get called multiple times\n    // for the same control if something changes. This is not supported by google charts as far as I can tell\n    // from their source code.\n    const controlWrappersReady$ = this.controlWrappers.map(control => control.wrapperReady$);\n    const chartsReady$ = this.controlWrappers.map(control => control.for).map(charts => {\n      if (Array.isArray(charts)) {\n        // CombineLatest waits for all observables\n        return combineLatest(charts.map(chart => chart.wrapperReady$));\n      } else {\n        return charts.wrapperReady$;\n      }\n    });\n    // We have to wait for all chart wrappers and control wrappers to be initialized\n    // before we can compose them together to create the dashboard\n    combineLatest([...controlWrappersReady$, ...chartsReady$]).subscribe(() => {\n      this.dashboard = new google.visualization.Dashboard(this.element.nativeElement);\n      this.initializeBindings();\n      this.registerEvents();\n      this.dashboard.draw(this.dataTable);\n    });\n  }\n  registerEvents() {\n    google.visualization.events.removeAllListeners(this.dashboard);\n    const registerDashEvent = (object, eventName, callback) => {\n      google.visualization.events.addListener(object, eventName, callback);\n    };\n    registerDashEvent(this.dashboard, 'ready', () => this.ready.emit());\n    registerDashEvent(this.dashboard, 'error', error => this.error.emit(error));\n  }\n  initializeBindings() {\n    this.controlWrappers.forEach(control => {\n      if (Array.isArray(control.for)) {\n        const chartWrappers = control.for.map(chart => chart.chartWrapper);\n        this.dashboard.bind(control.controlWrapper, chartWrappers);\n      } else {\n        this.dashboard.bind(control.controlWrapper, control.for.chartWrapper);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScriptLoaderService), i0.ɵɵdirectiveInject(DataTableService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"dashboard\"]],\n      contentQueries: function DashboardComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, ControlWrapperComponent, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.controlWrappers = _t);\n        }\n      },\n      hostAttrs: [1, \"dashboard\"],\n      inputs: {\n        data: \"data\",\n        columns: \"columns\",\n        formatters: \"formatters\"\n      },\n      outputs: {\n        ready: \"ready\",\n        error: \"error\"\n      },\n      exportAs: [\"dashboard\"],\n      standalone: false,\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DashboardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dashboard',\n      template: '<ng-content></ng-content>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'dashboard',\n      host: {\n        class: 'dashboard'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ScriptLoaderService\n    }, {\n      type: DataTableService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    formatters: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }],\n    controlWrappers: [{\n      type: ContentChildren,\n      args: [ControlWrapperComponent]\n    }]\n  });\n})();\nclass GoogleChartComponent {\n  constructor(element, scriptLoaderService, dataTableService, dashboard) {\n    this.element = element;\n    this.scriptLoaderService = scriptLoaderService;\n    this.dataTableService = dataTableService;\n    this.dashboard = dashboard;\n    /**\n     * The chart-specific options. All options listen in the Google Charts documentation applying\n     * to the chart type specified can be used here.\n     */\n    this.options = {};\n    /**\n     * If this is set to `true`, the chart will be redrawn if the browser window is resized.\n     * Defaults to `false` and should only be used when specifying the width or height of the chart\n     * in percent.\n     *\n     * Note that this can impact performance.\n     */\n    this.dynamicResize = false;\n    this.ready = new EventEmitter();\n    this.error = new EventEmitter();\n    this.select = new EventEmitter();\n    this.mouseover = new EventEmitter();\n    this.mouseleave = new EventEmitter();\n    this.wrapperReadySubject = new ReplaySubject(1);\n    this.initialized = false;\n    this.eventListeners = new Map();\n  }\n  get chart() {\n    return this.chartWrapper.getChart();\n  }\n  get wrapperReady$() {\n    return this.wrapperReadySubject.asObservable();\n  }\n  get chartWrapper() {\n    if (!this.wrapper) {\n      throw new Error('Trying to access the chart wrapper before it was fully initialized');\n    }\n    return this.wrapper;\n  }\n  set chartWrapper(wrapper) {\n    this.wrapper = wrapper;\n    this.drawChart();\n  }\n  ngOnInit() {\n    // We don't need to load any chart packages, the chart wrapper will handle this for us\n    this.scriptLoaderService.loadChartPackages(getPackageForChart(this.type)).subscribe(() => {\n      this.dataTable = this.dataTableService.create(this.data, this.columns, this.formatters);\n      // Only ever create the wrapper once to allow animations to happen when something changes.\n      this.wrapper = new google.visualization.ChartWrapper({\n        container: this.element.nativeElement,\n        chartType: this.type,\n        dataTable: this.dataTable,\n        options: this.mergeOptions()\n      });\n      this.registerChartEvents();\n      this.wrapperReadySubject.next(this.wrapper);\n      this.initialized = true;\n      this.drawChart();\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes.dynamicResize) {\n      this.updateResizeListener();\n    }\n    if (this.initialized) {\n      let shouldRedraw = false;\n      if (changes.data || changes.columns || changes.formatters) {\n        this.dataTable = this.dataTableService.create(this.data, this.columns, this.formatters);\n        this.wrapper.setDataTable(this.dataTable);\n        shouldRedraw = true;\n      }\n      if (changes.type) {\n        this.wrapper.setChartType(this.type);\n        shouldRedraw = true;\n      }\n      if (changes.options || changes.width || changes.height || changes.title) {\n        this.wrapper.setOptions(this.mergeOptions());\n        shouldRedraw = true;\n      }\n      if (shouldRedraw) {\n        this.drawChart();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribeToResizeIfSubscribed();\n  }\n  /**\n   * For listening to events other than the most common ones (available via Output properties).\n   *\n   * Can be called after the chart emits that it's \"ready\".\n   *\n   * Returns a handle that can be used for `removeEventListener`.\n   */\n  addEventListener(eventName, callback) {\n    const handle = this.registerChartEvent(this.chart, eventName, callback);\n    this.eventListeners.set(handle, {\n      eventName,\n      callback,\n      handle\n    });\n    return handle;\n  }\n  removeEventListener(handle) {\n    const entry = this.eventListeners.get(handle);\n    if (entry) {\n      google.visualization.events.removeListener(entry.handle);\n      this.eventListeners.delete(handle);\n    }\n  }\n  updateResizeListener() {\n    this.unsubscribeToResizeIfSubscribed();\n    if (this.dynamicResize) {\n      this.resizeSubscription = fromEvent(window, 'resize', {\n        passive: true\n      }).pipe(debounceTime(100)).subscribe(() => {\n        if (this.initialized) {\n          this.drawChart();\n        }\n      });\n    }\n  }\n  unsubscribeToResizeIfSubscribed() {\n    if (this.resizeSubscription != null) {\n      this.resizeSubscription.unsubscribe();\n      this.resizeSubscription = undefined;\n    }\n  }\n  mergeOptions() {\n    return {\n      title: this.title,\n      width: this.width,\n      height: this.height,\n      ...this.options\n    };\n  }\n  registerChartEvents() {\n    google.visualization.events.removeAllListeners(this.wrapper);\n    this.registerChartEvent(this.wrapper, 'ready', () => {\n      // This could also be done by checking if we already subscribed to the events\n      google.visualization.events.removeAllListeners(this.chart);\n      this.registerChartEvent(this.chart, 'onmouseover', event => this.mouseover.emit(event));\n      this.registerChartEvent(this.chart, 'onmouseout', event => this.mouseleave.emit(event));\n      this.registerChartEvent(this.chart, 'select', () => {\n        const selection = this.chart.getSelection();\n        this.select.emit({\n          selection\n        });\n      });\n      this.eventListeners.forEach(x => x.handle = this.registerChartEvent(this.chart, x.eventName, x.callback));\n      this.ready.emit({\n        chart: this.chart\n      });\n    });\n    this.registerChartEvent(this.wrapper, 'error', error => this.error.emit(error));\n  }\n  registerChartEvent(object, eventName, callback) {\n    return google.visualization.events.addListener(object, eventName, callback);\n  }\n  drawChart() {\n    if (this.dashboard != null) {\n      // If this chart is part of a dashboard, the dashboard takes care of drawing\n      return;\n    }\n    this.wrapper.draw();\n  }\n  static {\n    this.ɵfac = function GoogleChartComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GoogleChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScriptLoaderService), i0.ɵɵdirectiveInject(DataTableService), i0.ɵɵdirectiveInject(DashboardComponent, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: GoogleChartComponent,\n      selectors: [[\"google-chart\"]],\n      hostAttrs: [1, \"google-chart\"],\n      inputs: {\n        type: \"type\",\n        data: \"data\",\n        columns: \"columns\",\n        title: \"title\",\n        width: \"width\",\n        height: \"height\",\n        options: \"options\",\n        formatters: \"formatters\",\n        dynamicResize: \"dynamicResize\"\n      },\n      outputs: {\n        ready: \"ready\",\n        error: \"error\",\n        select: \"select\",\n        mouseover: \"mouseover\",\n        mouseleave: \"mouseleave\"\n      },\n      exportAs: [\"googleChart\"],\n      standalone: false,\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 0,\n      vars: 0,\n      template: function GoogleChartComponent_Template(rf, ctx) {},\n      styles: [\"[_nghost-%COMP%]{width:-moz-fit-content;width:fit-content;display:block}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'google-chart',\n      template: '',\n      host: {\n        class: 'google-chart'\n      },\n      exportAs: 'googleChart',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\":host{width:-moz-fit-content;width:fit-content;display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ScriptLoaderService\n    }, {\n      type: DataTableService\n    }, {\n      type: DashboardComponent,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    formatters: [{\n      type: Input\n    }],\n    dynamicResize: [{\n      type: Input\n    }],\n    ready: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    mouseover: [{\n      type: Output\n    }],\n    mouseleave: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartWrapperComponent {\n  constructor(element, scriptLoaderService) {\n    this.element = element;\n    this.scriptLoaderService = scriptLoaderService;\n    this.error = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.select = new EventEmitter();\n    this.wrapperReadySubject = new ReplaySubject(1);\n    this.initialized = false;\n  }\n  get chart() {\n    return this.chartWrapper.getChart();\n  }\n  get wrapperReady$() {\n    return this.wrapperReadySubject.asObservable();\n  }\n  get chartWrapper() {\n    if (!this.wrapper) {\n      throw new Error('Cannot access the chart wrapper before initialization.');\n    }\n    return this.wrapper;\n  }\n  set chartWrapper(wrapper) {\n    this.wrapper = wrapper;\n    this.drawChart();\n  }\n  ngOnInit() {\n    // We don't need to load any chart packages, the chart wrapper will handle this else for us\n    this.scriptLoaderService.loadChartPackages().subscribe(() => {\n      if (!this.specs) {\n        this.specs = {};\n      }\n      const {\n        containerId,\n        container,\n        ...specs\n      } = this.specs;\n      // Only ever create the wrapper once to allow animations to happen if something changes.\n      this.wrapper = new google.visualization.ChartWrapper({\n        ...specs,\n        container: this.element.nativeElement\n      });\n      this.registerChartEvents();\n      this.wrapperReadySubject.next(this.wrapper);\n      this.drawChart();\n      this.initialized = true;\n    });\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      return;\n    }\n    if (changes.specs) {\n      this.updateChart();\n      this.drawChart();\n    }\n  }\n  updateChart() {\n    if (!this.specs) {\n      // When creating the wrapper with empty specs, the google charts library will show an error\n      // If we don't do this, a javascript error will be thrown, which is not as visible to the user\n      this.specs = {};\n    }\n    // The typing here are not correct. These methods accept `undefined` as well.\n    // That's why we have to cast to `any`\n    this.wrapper.setChartType(this.specs.chartType);\n    this.wrapper.setDataTable(this.specs.dataTable);\n    this.wrapper.setDataSourceUrl(this.specs.dataSourceUrl);\n    this.wrapper.setDataSourceUrl(this.specs.dataSourceUrl);\n    this.wrapper.setQuery(this.specs.query);\n    this.wrapper.setOptions(this.specs.options);\n    this.wrapper.setRefreshInterval(this.specs.refreshInterval);\n    this.wrapper.setView(this.specs.view);\n  }\n  drawChart() {\n    if (this.wrapper) {\n      this.wrapper.draw();\n    }\n  }\n  registerChartEvents() {\n    google.visualization.events.removeAllListeners(this.wrapper);\n    const registerChartEvent = (object, eventName, callback) => {\n      google.visualization.events.addListener(object, eventName, callback);\n    };\n    registerChartEvent(this.wrapper, 'ready', () => this.ready.emit({\n      chart: this.chart\n    }));\n    registerChartEvent(this.wrapper, 'error', error => this.error.emit(error));\n    registerChartEvent(this.wrapper, 'select', () => {\n      const selection = this.chart.getSelection();\n      this.select.emit({\n        selection\n      });\n    });\n  }\n  static {\n    this.ɵfac = function ChartWrapperComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChartWrapperComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ScriptLoaderService));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChartWrapperComponent,\n      selectors: [[\"chart-wrapper\"]],\n      hostAttrs: [1, \"chart-wrapper\"],\n      inputs: {\n        specs: \"specs\"\n      },\n      outputs: {\n        error: \"error\",\n        ready: \"ready\",\n        select: \"select\"\n      },\n      exportAs: [\"chartWrapper\"],\n      standalone: false,\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 0,\n      vars: 0,\n      template: function ChartWrapperComponent_Template(rf, ctx) {},\n      styles: [_c1],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'chart-wrapper',\n      template: '',\n      host: {\n        class: 'chart-wrapper'\n      },\n      exportAs: 'chartWrapper',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\":host{width:-moz-fit-content;width:fit-content;display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ScriptLoaderService\n    }];\n  }, {\n    specs: [{\n      type: Input\n    }],\n    error: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass GoogleChartsModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: GoogleChartsModule,\n      providers: [{\n        provide: GOOGLE_CHARTS_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function GoogleChartsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GoogleChartsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: GoogleChartsModule,\n      declarations: [GoogleChartComponent, ChartWrapperComponent, DashboardComponent, ControlWrapperComponent, ChartEditorComponent],\n      exports: [GoogleChartComponent, ChartWrapperComponent, DashboardComponent, ControlWrapperComponent, ChartEditorComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [ScriptLoaderService]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [GoogleChartComponent, ChartWrapperComponent, DashboardComponent, ControlWrapperComponent, ChartEditorComponent],\n      providers: [ScriptLoaderService],\n      exports: [GoogleChartComponent, ChartWrapperComponent, DashboardComponent, ControlWrapperComponent, ChartEditorComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Provides the necessary services for using Google Charts standalone components.\n *\n * @param config Optional configuration for Google Charts\n * @returns Environment providers for Google Charts\n *\n * @example\n * ```typescript\n * import { bootstrapApplication } from '@angular/platform-browser';\n * import { provideGoogleCharts } from 'angular-google-charts';\n *\n * bootstrapApplication(AppComponent, {\n *   providers: [\n *     provideGoogleCharts({ version: '49' })\n *   ]\n * });\n * ```\n */\nfunction provideGoogleCharts(config = {}) {\n  return makeEnvironmentProviders([ScriptLoaderService, DataTableService, {\n    provide: GOOGLE_CHARTS_CONFIG,\n    useValue: config\n  }]);\n}\n\n// Standalone component versions\n// Create standalone versions by copying the metadata and setting standalone: true\nclass GoogleChart extends GoogleChartComponent {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵGoogleChart_BaseFactory;\n      return function GoogleChart_Factory(__ngFactoryType__) {\n        return (ɵGoogleChart_BaseFactory || (ɵGoogleChart_BaseFactory = i0.ɵɵgetInheritedFactory(GoogleChart)))(__ngFactoryType__ || GoogleChart);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: GoogleChart,\n      selectors: [[\"google-chart\"]],\n      hostAttrs: [1, \"google-chart\"],\n      exportAs: [\"googleChart\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 0,\n      vars: 0,\n      template: function GoogleChart_Template(rf, ctx) {},\n      styles: [_c1]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChart, [{\n    type: Component,\n    args: [{\n      selector: 'google-chart',\n      template: '',\n      host: {\n        class: 'google-chart'\n      },\n      exportAs: 'googleChart',\n      standalone: true,\n      styles: [\":host{width:-moz-fit-content;width:fit-content;display:block}\\n\"]\n    }]\n  }], null, null);\n})();\nclass ChartWrapper extends ChartWrapperComponent {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵChartWrapper_BaseFactory;\n      return function ChartWrapper_Factory(__ngFactoryType__) {\n        return (ɵChartWrapper_BaseFactory || (ɵChartWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(ChartWrapper)))(__ngFactoryType__ || ChartWrapper);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChartWrapper,\n      selectors: [[\"chart-wrapper\"]],\n      hostAttrs: [1, \"chart-wrapper\"],\n      exportAs: [\"chartWrapper\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 0,\n      vars: 0,\n      template: function ChartWrapper_Template(rf, ctx) {},\n      styles: [_c1]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartWrapper, [{\n    type: Component,\n    args: [{\n      selector: 'chart-wrapper',\n      template: '',\n      host: {\n        class: 'chart-wrapper'\n      },\n      exportAs: 'chartWrapper',\n      standalone: true,\n      styles: [\":host{width:-moz-fit-content;width:fit-content;display:block}\\n\"]\n    }]\n  }], null, null);\n})();\nclass Dashboard extends DashboardComponent {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵDashboard_BaseFactory;\n      return function Dashboard_Factory(__ngFactoryType__) {\n        return (ɵDashboard_BaseFactory || (ɵDashboard_BaseFactory = i0.ɵɵgetInheritedFactory(Dashboard)))(__ngFactoryType__ || Dashboard);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Dashboard,\n      selectors: [[\"dashboard\"]],\n      hostAttrs: [1, \"dashboard\"],\n      exportAs: [\"dashboard\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function Dashboard_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dashboard, [{\n    type: Component,\n    args: [{\n      selector: 'dashboard',\n      template: '<ng-content></ng-content>',\n      exportAs: 'dashboard',\n      host: {\n        class: 'dashboard'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass ControlWrapper extends ControlWrapperComponent {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵControlWrapper_BaseFactory;\n      return function ControlWrapper_Factory(__ngFactoryType__) {\n        return (ɵControlWrapper_BaseFactory || (ɵControlWrapper_BaseFactory = i0.ɵɵgetInheritedFactory(ControlWrapper)))(__ngFactoryType__ || ControlWrapper);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ControlWrapper,\n      selectors: [[\"control-wrapper\"]],\n      hostAttrs: [1, \"control-wrapper\"],\n      exportAs: [\"controlWrapper\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 0,\n      vars: 0,\n      template: function ControlWrapper_Template(rf, ctx) {},\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ControlWrapper, [{\n    type: Component,\n    args: [{\n      selector: 'control-wrapper',\n      template: '',\n      host: {\n        class: 'control-wrapper'\n      },\n      exportAs: 'controlWrapper',\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass ChartEditor extends ChartEditorComponent {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵChartEditor_BaseFactory;\n      return function ChartEditor_Factory(__ngFactoryType__) {\n        return (ɵChartEditor_BaseFactory || (ɵChartEditor_BaseFactory = i0.ɵɵgetInheritedFactory(ChartEditor)))(__ngFactoryType__ || ChartEditor);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChartEditor,\n      selectors: [[\"chart-editor\"]],\n      hostAttrs: [1, \"chart-editor\"],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function ChartEditor_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartEditor, [{\n    type: Component,\n    args: [{\n      selector: 'chart-editor',\n      template: `<ng-content></ng-content>`,\n      host: {\n        class: 'chart-editor'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of angular-google-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartEditor, ChartEditorComponent, ChartEditorRef, ChartType, ChartWrapper, ChartWrapperComponent, ControlWrapper, ControlWrapperComponent, Dashboard, DashboardComponent, DataTableService, FilterType, GOOGLE_CHARTS_CONFIG, GOOGLE_CHARTS_LAZY_CONFIG, GoogleChart, GoogleChartComponent, GoogleChartsModule, ScriptLoaderService, getDefaultConfig, getPackageForChart, provideGoogleCharts };\n"],
  "mappings": "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",
  "names": ["ChartType", "FilterType"]
}
